"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-image-crop";
exports.ids = ["vendor-chunks/react-image-crop"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-image-crop/dist/ReactCrop.css":
/*!**********************************************************!*\
  !*** ./node_modules/react-image-crop/dist/ReactCrop.css ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"6579efb6794e\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3QtaW1hZ2UtY3JvcC9kaXN0L1JlYWN0Q3JvcC5jc3MiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLGNBQWM7QUFDN0IsSUFBSSxLQUFVLEVBQUUsRUFBdUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9rcmVhdG9yLXdzcG9tbmllbi8uL25vZGVfbW9kdWxlcy9yZWFjdC1pbWFnZS1jcm9wL2Rpc3QvUmVhY3RDcm9wLmNzcz9lYjczIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiNjU3OWVmYjY3OTRlXCJcbmlmIChtb2R1bGUuaG90KSB7IG1vZHVsZS5ob3QuYWNjZXB0KCkgfVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-image-crop/dist/ReactCrop.css\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-image-crop/dist/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/react-image-crop/dist/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Component: () => (/* binding */ S),\n/* harmony export */   ReactCrop: () => (/* binding */ S),\n/* harmony export */   areCropsEqual: () => (/* binding */ X),\n/* harmony export */   centerCrop: () => (/* binding */ L),\n/* harmony export */   clamp: () => (/* binding */ b),\n/* harmony export */   cls: () => (/* binding */ H),\n/* harmony export */   containCrop: () => (/* binding */ k),\n/* harmony export */   convertToPercentCrop: () => (/* binding */ v),\n/* harmony export */   convertToPixelCrop: () => (/* binding */ D),\n/* harmony export */   \"default\": () => (/* binding */ S),\n/* harmony export */   defaultCrop: () => (/* binding */ E),\n/* harmony export */   makeAspectCrop: () => (/* binding */ B),\n/* harmony export */   nudgeCrop: () => (/* binding */ I)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar _ = Object.defineProperty;\nvar $ = (a, h, e)=>h in a ? _(a, h, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: e\n    }) : a[h] = e;\nvar m = (a, h, e)=>$(a, typeof h != \"symbol\" ? h + \"\" : h, e);\n\nconst E = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n    unit: \"px\"\n}, b = (a, h, e)=>Math.min(Math.max(a, h), e), H = (...a)=>a.filter((h)=>h && typeof h == \"string\").join(\" \"), X = (a, h)=>a === h || a.width === h.width && a.height === h.height && a.x === h.x && a.y === h.y && a.unit === h.unit;\nfunction B(a, h, e, n) {\n    const t = D(a, e, n);\n    return a.width && (t.height = t.width / h), a.height && (t.width = t.height * h), t.y + t.height > n && (t.height = n - t.y, t.width = t.height * h), t.x + t.width > e && (t.width = e - t.x, t.height = t.width / h), a.unit === \"%\" ? v(t, e, n) : t;\n}\nfunction L(a, h, e) {\n    const n = D(a, h, e);\n    return n.x = (h - n.width) / 2, n.y = (e - n.height) / 2, a.unit === \"%\" ? v(n, h, e) : n;\n}\nfunction v(a, h, e) {\n    return a.unit === \"%\" ? {\n        ...E,\n        ...a,\n        unit: \"%\"\n    } : {\n        unit: \"%\",\n        x: a.x ? a.x / h * 100 : 0,\n        y: a.y ? a.y / e * 100 : 0,\n        width: a.width ? a.width / h * 100 : 0,\n        height: a.height ? a.height / e * 100 : 0\n    };\n}\nfunction D(a, h, e) {\n    return a.unit ? a.unit === \"px\" ? {\n        ...E,\n        ...a,\n        unit: \"px\"\n    } : {\n        unit: \"px\",\n        x: a.x ? a.x * h / 100 : 0,\n        y: a.y ? a.y * e / 100 : 0,\n        width: a.width ? a.width * h / 100 : 0,\n        height: a.height ? a.height * e / 100 : 0\n    } : {\n        ...E,\n        ...a,\n        unit: \"px\"\n    };\n}\nfunction k(a, h, e, n, t, d = 0, r = 0, o = n, w = t) {\n    const i = {\n        ...a\n    };\n    let s = Math.min(d, n), c = Math.min(r, t), g = Math.min(o, n), p = Math.min(w, t);\n    h && (h > 1 ? (s = r ? r * h : s, c = s / h, g = o * h) : (c = d ? d / h : c, s = c * h, p = w / h)), i.y < 0 && (i.height = Math.max(i.height + i.y, c), i.y = 0), i.x < 0 && (i.width = Math.max(i.width + i.x, s), i.x = 0);\n    const l = n - (i.x + i.width);\n    l < 0 && (i.x = Math.min(i.x, n - s), i.width += l);\n    const C = t - (i.y + i.height);\n    if (C < 0 && (i.y = Math.min(i.y, t - c), i.height += C), i.width < s && ((e === \"sw\" || e == \"nw\") && (i.x -= s - i.width), i.width = s), i.height < c && ((e === \"nw\" || e == \"ne\") && (i.y -= c - i.height), i.height = c), i.width > g && ((e === \"sw\" || e == \"nw\") && (i.x -= g - i.width), i.width = g), i.height > p && ((e === \"nw\" || e == \"ne\") && (i.y -= p - i.height), i.height = p), h) {\n        const y = i.width / i.height;\n        if (y < h) {\n            const f = Math.max(i.width / h, c);\n            (e === \"nw\" || e == \"ne\") && (i.y -= f - i.height), i.height = f;\n        } else if (y > h) {\n            const f = Math.max(i.height * h, s);\n            (e === \"sw\" || e == \"nw\") && (i.x -= f - i.width), i.width = f;\n        }\n    }\n    return i;\n}\nfunction I(a, h, e, n) {\n    const t = {\n        ...a\n    };\n    return h === \"ArrowLeft\" ? n === \"nw\" ? (t.x -= e, t.y -= e, t.width += e, t.height += e) : n === \"w\" ? (t.x -= e, t.width += e) : n === \"sw\" ? (t.x -= e, t.width += e, t.height += e) : n === \"ne\" ? (t.y += e, t.width -= e, t.height -= e) : n === \"e\" ? t.width -= e : n === \"se\" && (t.width -= e, t.height -= e) : h === \"ArrowRight\" && (n === \"nw\" ? (t.x += e, t.y += e, t.width -= e, t.height -= e) : n === \"w\" ? (t.x += e, t.width -= e) : n === \"sw\" ? (t.x += e, t.width -= e, t.height -= e) : n === \"ne\" ? (t.y -= e, t.width += e, t.height += e) : n === \"e\" ? t.width += e : n === \"se\" && (t.width += e, t.height += e)), h === \"ArrowUp\" ? n === \"nw\" ? (t.x -= e, t.y -= e, t.width += e, t.height += e) : n === \"n\" ? (t.y -= e, t.height += e) : n === \"ne\" ? (t.y -= e, t.width += e, t.height += e) : n === \"sw\" ? (t.x += e, t.width -= e, t.height -= e) : n === \"s\" ? t.height -= e : n === \"se\" && (t.width -= e, t.height -= e) : h === \"ArrowDown\" && (n === \"nw\" ? (t.x += e, t.y += e, t.width -= e, t.height -= e) : n === \"n\" ? (t.y += e, t.height -= e) : n === \"ne\" ? (t.y += e, t.width -= e, t.height -= e) : n === \"sw\" ? (t.x -= e, t.width += e, t.height += e) : n === \"s\" ? t.height += e : n === \"se\" && (t.width += e, t.height += e)), t;\n}\nconst M = {\n    capture: !0,\n    passive: !1\n};\nlet N = 0;\nconst x = class x extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent {\n    constructor(){\n        super(...arguments);\n        m(this, \"docMoveBound\", !1);\n        m(this, \"mouseDownOnCrop\", !1);\n        m(this, \"dragStarted\", !1);\n        m(this, \"evData\", {\n            startClientX: 0,\n            startClientY: 0,\n            startCropX: 0,\n            startCropY: 0,\n            clientX: 0,\n            clientY: 0,\n            isResize: !0\n        });\n        m(this, \"componentRef\", /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createRef)());\n        m(this, \"mediaRef\", /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createRef)());\n        m(this, \"resizeObserver\");\n        m(this, \"initChangeCalled\", !1);\n        m(this, \"instanceId\", `rc-${N++}`);\n        m(this, \"state\", {\n            cropIsActive: !1,\n            newCropIsBeingDrawn: !1\n        });\n        m(this, \"onCropPointerDown\", (e)=>{\n            const { crop: n, disabled: t } = this.props, d = this.getBox();\n            if (!n) return;\n            const r = D(n, d.width, d.height);\n            if (t) return;\n            e.cancelable && e.preventDefault(), this.bindDocMove(), this.componentRef.current.focus({\n                preventScroll: !0\n            });\n            const o = e.target.dataset.ord, w = !!o;\n            let i = e.clientX, s = e.clientY, c = r.x, g = r.y;\n            if (o) {\n                const p = e.clientX - d.x, l = e.clientY - d.y;\n                let C = 0, y = 0;\n                o === \"ne\" || o == \"e\" ? (C = p - (r.x + r.width), y = l - r.y, c = r.x, g = r.y + r.height) : o === \"se\" || o === \"s\" ? (C = p - (r.x + r.width), y = l - (r.y + r.height), c = r.x, g = r.y) : o === \"sw\" || o == \"w\" ? (C = p - r.x, y = l - (r.y + r.height), c = r.x + r.width, g = r.y) : (o === \"nw\" || o == \"n\") && (C = p - r.x, y = l - r.y, c = r.x + r.width, g = r.y + r.height), i = c + d.x + C, s = g + d.y + y;\n            }\n            this.evData = {\n                startClientX: i,\n                startClientY: s,\n                startCropX: c,\n                startCropY: g,\n                clientX: e.clientX,\n                clientY: e.clientY,\n                isResize: w,\n                ord: o\n            }, this.mouseDownOnCrop = !0, this.setState({\n                cropIsActive: !0\n            });\n        });\n        m(this, \"onComponentPointerDown\", (e)=>{\n            const { crop: n, disabled: t, locked: d, keepSelection: r, onChange: o } = this.props, w = this.getBox();\n            if (t || d || r && n) return;\n            e.cancelable && e.preventDefault(), this.bindDocMove(), this.componentRef.current.focus({\n                preventScroll: !0\n            });\n            const i = e.clientX - w.x, s = e.clientY - w.y, c = {\n                unit: \"px\",\n                x: i,\n                y: s,\n                width: 0,\n                height: 0\n            };\n            this.evData = {\n                startClientX: e.clientX,\n                startClientY: e.clientY,\n                startCropX: i,\n                startCropY: s,\n                clientX: e.clientX,\n                clientY: e.clientY,\n                isResize: !0\n            }, this.mouseDownOnCrop = !0, o(D(c, w.width, w.height), v(c, w.width, w.height)), this.setState({\n                cropIsActive: !0,\n                newCropIsBeingDrawn: !0\n            });\n        });\n        m(this, \"onDocPointerMove\", (e)=>{\n            const { crop: n, disabled: t, onChange: d, onDragStart: r } = this.props, o = this.getBox();\n            if (t || !n || !this.mouseDownOnCrop) return;\n            e.cancelable && e.preventDefault(), this.dragStarted || (this.dragStarted = !0, r && r(e));\n            const { evData: w } = this;\n            w.clientX = e.clientX, w.clientY = e.clientY;\n            let i;\n            w.isResize ? i = this.resizeCrop() : i = this.dragCrop(), X(n, i) || d(D(i, o.width, o.height), v(i, o.width, o.height));\n        });\n        m(this, \"onComponentKeyDown\", (e)=>{\n            const { crop: n, disabled: t, onChange: d, onComplete: r } = this.props;\n            if (t) return;\n            const o = e.key;\n            let w = !1;\n            if (!n) return;\n            const i = this.getBox(), s = this.makePixelCrop(i), g = (navigator.platform.match(\"Mac\") ? e.metaKey : e.ctrlKey) ? x.nudgeStepLarge : e.shiftKey ? x.nudgeStepMedium : x.nudgeStep;\n            if (o === \"ArrowLeft\" ? (s.x -= g, w = !0) : o === \"ArrowRight\" ? (s.x += g, w = !0) : o === \"ArrowUp\" ? (s.y -= g, w = !0) : o === \"ArrowDown\" && (s.y += g, w = !0), w) {\n                e.cancelable && e.preventDefault(), s.x = b(s.x, 0, i.width - s.width), s.y = b(s.y, 0, i.height - s.height);\n                const p = D(s, i.width, i.height), l = v(s, i.width, i.height);\n                d(p, l), r && r(p, l);\n            }\n        });\n        m(this, \"onHandlerKeyDown\", (e, n)=>{\n            const { aspect: t = 0, crop: d, disabled: r, minWidth: o = 0, minHeight: w = 0, maxWidth: i, maxHeight: s, onChange: c, onComplete: g } = this.props, p = this.getBox();\n            if (r || !d) return;\n            if (e.key === \"ArrowUp\" || e.key === \"ArrowDown\" || e.key === \"ArrowLeft\" || e.key === \"ArrowRight\") e.stopPropagation(), e.preventDefault();\n            else return;\n            const C = (navigator.platform.match(\"Mac\") ? e.metaKey : e.ctrlKey) ? x.nudgeStepLarge : e.shiftKey ? x.nudgeStepMedium : x.nudgeStep, y = D(d, p.width, p.height), f = I(y, e.key, C, n), R = k(f, t, n, p.width, p.height, o, w, i, s);\n            if (!X(d, R)) {\n                const Y = v(R, p.width, p.height);\n                c(R, Y), g && g(R, Y);\n            }\n        });\n        m(this, \"onDocPointerDone\", (e)=>{\n            const { crop: n, disabled: t, onComplete: d, onDragEnd: r } = this.props, o = this.getBox();\n            this.unbindDocMove(), !(t || !n) && this.mouseDownOnCrop && (this.mouseDownOnCrop = !1, this.dragStarted = !1, r && r(e), d && d(D(n, o.width, o.height), v(n, o.width, o.height)), this.setState({\n                cropIsActive: !1,\n                newCropIsBeingDrawn: !1\n            }));\n        });\n        m(this, \"onDragFocus\", ()=>{\n            var e;\n            (e = this.componentRef.current) == null || e.scrollTo(0, 0);\n        });\n    }\n    get document() {\n        return document;\n    }\n    // We unfortunately get the bounding box every time as x+y changes\n    // due to scrolling.\n    getBox() {\n        const e = this.mediaRef.current;\n        if (!e) return {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        };\n        const { x: n, y: t, width: d, height: r } = e.getBoundingClientRect();\n        return {\n            x: n,\n            y: t,\n            width: d,\n            height: r\n        };\n    }\n    componentDidUpdate(e) {\n        const { crop: n, onComplete: t } = this.props;\n        if (t && !e.crop && n) {\n            const { width: d, height: r } = this.getBox();\n            d && r && t(D(n, d, r), v(n, d, r));\n        }\n    }\n    componentWillUnmount() {\n        this.resizeObserver && this.resizeObserver.disconnect(), this.unbindDocMove();\n    }\n    bindDocMove() {\n        this.docMoveBound || (this.document.addEventListener(\"pointermove\", this.onDocPointerMove, M), this.document.addEventListener(\"pointerup\", this.onDocPointerDone, M), this.document.addEventListener(\"pointercancel\", this.onDocPointerDone, M), this.docMoveBound = !0);\n    }\n    unbindDocMove() {\n        this.docMoveBound && (this.document.removeEventListener(\"pointermove\", this.onDocPointerMove, M), this.document.removeEventListener(\"pointerup\", this.onDocPointerDone, M), this.document.removeEventListener(\"pointercancel\", this.onDocPointerDone, M), this.docMoveBound = !1);\n    }\n    getCropStyle() {\n        const { crop: e } = this.props;\n        if (e) return {\n            top: `${e.y}${e.unit}`,\n            left: `${e.x}${e.unit}`,\n            width: `${e.width}${e.unit}`,\n            height: `${e.height}${e.unit}`\n        };\n    }\n    dragCrop() {\n        const { evData: e } = this, n = this.getBox(), t = this.makePixelCrop(n), d = e.clientX - e.startClientX, r = e.clientY - e.startClientY;\n        return t.x = b(e.startCropX + d, 0, n.width - t.width), t.y = b(e.startCropY + r, 0, n.height - t.height), t;\n    }\n    getPointRegion(e, n, t, d) {\n        const { evData: r } = this, o = r.clientX - e.x, w = r.clientY - e.y;\n        let i;\n        d && n ? i = n === \"nw\" || n === \"n\" || n === \"ne\" : i = w < r.startCropY;\n        let s;\n        return t && n ? s = n === \"nw\" || n === \"w\" || n === \"sw\" : s = o < r.startCropX, s ? i ? \"nw\" : \"sw\" : i ? \"ne\" : \"se\";\n    }\n    resolveMinDimensions(e, n, t = 0, d = 0) {\n        const r = Math.min(t, e.width), o = Math.min(d, e.height);\n        return !n || !r && !o ? [\n            r,\n            o\n        ] : n > 1 ? r ? [\n            r,\n            r / n\n        ] : [\n            o * n,\n            o\n        ] : o ? [\n            o * n,\n            o\n        ] : [\n            r,\n            r / n\n        ];\n    }\n    resizeCrop() {\n        const { evData: e } = this, { aspect: n = 0, maxWidth: t, maxHeight: d } = this.props, r = this.getBox(), [o, w] = this.resolveMinDimensions(r, n, this.props.minWidth, this.props.minHeight);\n        let i = this.makePixelCrop(r);\n        const s = this.getPointRegion(r, e.ord, o, w), c = e.ord || s;\n        let g = e.clientX - e.startClientX, p = e.clientY - e.startClientY;\n        (o && c === \"nw\" || c === \"w\" || c === \"sw\") && (g = Math.min(g, -o)), (w && c === \"nw\" || c === \"n\" || c === \"ne\") && (p = Math.min(p, -w));\n        const l = {\n            unit: \"px\",\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        };\n        s === \"ne\" ? (l.x = e.startCropX, l.width = g, n ? (l.height = l.width / n, l.y = e.startCropY - l.height) : (l.height = Math.abs(p), l.y = e.startCropY - l.height)) : s === \"se\" ? (l.x = e.startCropX, l.y = e.startCropY, l.width = g, n ? l.height = l.width / n : l.height = p) : s === \"sw\" ? (l.x = e.startCropX + g, l.y = e.startCropY, l.width = Math.abs(g), n ? l.height = l.width / n : l.height = p) : s === \"nw\" && (l.x = e.startCropX + g, l.width = Math.abs(g), n ? (l.height = l.width / n, l.y = e.startCropY - l.height) : (l.height = Math.abs(p), l.y = e.startCropY + p));\n        const C = k(l, n, s, r.width, r.height, o, w, t, d);\n        return n || x.xyOrds.indexOf(c) > -1 ? i = C : x.xOrds.indexOf(c) > -1 ? (i.x = C.x, i.width = C.width) : x.yOrds.indexOf(c) > -1 && (i.y = C.y, i.height = C.height), i.x = b(i.x, 0, r.width - i.width), i.y = b(i.y, 0, r.height - i.height), i;\n    }\n    renderCropSelection() {\n        const { ariaLabels: e = x.defaultProps.ariaLabels, disabled: n, locked: t, renderSelectionAddon: d, ruleOfThirds: r, crop: o } = this.props, w = this.getCropStyle();\n        if (o) return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            style: w,\n            className: \"ReactCrop__crop-selection\",\n            onPointerDown: this.onCropPointerDown,\n            \"aria-label\": e.cropArea,\n            tabIndex: 0,\n            onKeyDown: this.onComponentKeyDown,\n            role: \"group\"\n        }, !n && !t && /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"ReactCrop__drag-elements\",\n            onFocus: this.onDragFocus\n        }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"ReactCrop__drag-bar ord-n\",\n            \"data-ord\": \"n\"\n        }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"ReactCrop__drag-bar ord-e\",\n            \"data-ord\": \"e\"\n        }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"ReactCrop__drag-bar ord-s\",\n            \"data-ord\": \"s\"\n        }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"ReactCrop__drag-bar ord-w\",\n            \"data-ord\": \"w\"\n        }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"ReactCrop__drag-handle ord-nw\",\n            \"data-ord\": \"nw\",\n            tabIndex: 0,\n            \"aria-label\": e.nwDragHandle,\n            onKeyDown: (i)=>this.onHandlerKeyDown(i, \"nw\"),\n            role: \"button\"\n        }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"ReactCrop__drag-handle ord-n\",\n            \"data-ord\": \"n\",\n            tabIndex: 0,\n            \"aria-label\": e.nDragHandle,\n            onKeyDown: (i)=>this.onHandlerKeyDown(i, \"n\"),\n            role: \"button\"\n        }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"ReactCrop__drag-handle ord-ne\",\n            \"data-ord\": \"ne\",\n            tabIndex: 0,\n            \"aria-label\": e.neDragHandle,\n            onKeyDown: (i)=>this.onHandlerKeyDown(i, \"ne\"),\n            role: \"button\"\n        }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"ReactCrop__drag-handle ord-e\",\n            \"data-ord\": \"e\",\n            tabIndex: 0,\n            \"aria-label\": e.eDragHandle,\n            onKeyDown: (i)=>this.onHandlerKeyDown(i, \"e\"),\n            role: \"button\"\n        }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"ReactCrop__drag-handle ord-se\",\n            \"data-ord\": \"se\",\n            tabIndex: 0,\n            \"aria-label\": e.seDragHandle,\n            onKeyDown: (i)=>this.onHandlerKeyDown(i, \"se\"),\n            role: \"button\"\n        }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"ReactCrop__drag-handle ord-s\",\n            \"data-ord\": \"s\",\n            tabIndex: 0,\n            \"aria-label\": e.sDragHandle,\n            onKeyDown: (i)=>this.onHandlerKeyDown(i, \"s\"),\n            role: \"button\"\n        }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"ReactCrop__drag-handle ord-sw\",\n            \"data-ord\": \"sw\",\n            tabIndex: 0,\n            \"aria-label\": e.swDragHandle,\n            onKeyDown: (i)=>this.onHandlerKeyDown(i, \"sw\"),\n            role: \"button\"\n        }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"ReactCrop__drag-handle ord-w\",\n            \"data-ord\": \"w\",\n            tabIndex: 0,\n            \"aria-label\": e.wDragHandle,\n            onKeyDown: (i)=>this.onHandlerKeyDown(i, \"w\"),\n            role: \"button\"\n        })), d && /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"ReactCrop__selection-addon\",\n            onPointerDown: (i)=>i.stopPropagation()\n        }, d(this.state)), r && /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"ReactCrop__rule-of-thirds-hz\"\n        }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"ReactCrop__rule-of-thirds-vt\"\n        })));\n    }\n    makePixelCrop(e) {\n        const n = {\n            ...E,\n            ...this.props.crop || {}\n        };\n        return D(n, e.width, e.height);\n    }\n    render() {\n        const { aspect: e, children: n, circularCrop: t, className: d, crop: r, disabled: o, locked: w, style: i, ruleOfThirds: s } = this.props, { cropIsActive: c, newCropIsBeingDrawn: g } = this.state, p = r ? this.renderCropSelection() : null, l = H(\"ReactCrop\", d, c && \"ReactCrop--active\", o && \"ReactCrop--disabled\", w && \"ReactCrop--locked\", g && \"ReactCrop--new-crop\", r && e && \"ReactCrop--fixed-aspect\", r && t && \"ReactCrop--circular-crop\", r && s && \"ReactCrop--rule-of-thirds\", !this.dragStarted && r && !r.width && !r.height && \"ReactCrop--invisible-crop\", t && \"ReactCrop--no-animate\");\n        return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            ref: this.componentRef,\n            className: l,\n            style: i\n        }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            ref: this.mediaRef,\n            className: \"ReactCrop__child-wrapper\",\n            onPointerDown: this.onComponentPointerDown\n        }, n), r ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", {\n            className: \"ReactCrop__crop-mask\",\n            width: \"100%\",\n            height: \"100%\"\n        }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"defs\", null, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"mask\", {\n            id: `hole-${this.instanceId}`\n        }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"rect\", {\n            width: \"100%\",\n            height: \"100%\",\n            fill: \"white\"\n        }), t ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"ellipse\", {\n            cx: `${r.x + r.width / 2}${r.unit}`,\n            cy: `${r.y + r.height / 2}${r.unit}`,\n            rx: `${r.width / 2}${r.unit}`,\n            ry: `${r.height / 2}${r.unit}`,\n            fill: \"black\"\n        }) : /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"rect\", {\n            x: `${r.x}${r.unit}`,\n            y: `${r.y}${r.unit}`,\n            width: `${r.width}${r.unit}`,\n            height: `${r.height}${r.unit}`,\n            fill: \"black\"\n        }))), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"rect\", {\n            fill: \"black\",\n            fillOpacity: 0.5,\n            width: \"100%\",\n            height: \"100%\",\n            mask: `url(#hole-${this.instanceId})`\n        })) : void 0, p);\n    }\n};\nm(x, \"xOrds\", [\n    \"e\",\n    \"w\"\n]), m(x, \"yOrds\", [\n    \"n\",\n    \"s\"\n]), m(x, \"xyOrds\", [\n    \"nw\",\n    \"ne\",\n    \"se\",\n    \"sw\"\n]), m(x, \"nudgeStep\", 1), m(x, \"nudgeStepMedium\", 10), m(x, \"nudgeStepLarge\", 100), m(x, \"defaultProps\", {\n    ariaLabels: {\n        cropArea: \"Use the arrow keys to move the crop selection area\",\n        nwDragHandle: \"Use the arrow keys to move the north west drag handle to change the crop selection area\",\n        nDragHandle: \"Use the up and down arrow keys to move the north drag handle to change the crop selection area\",\n        neDragHandle: \"Use the arrow keys to move the north east drag handle to change the crop selection area\",\n        eDragHandle: \"Use the up and down arrow keys to move the east drag handle to change the crop selection area\",\n        seDragHandle: \"Use the arrow keys to move the south east drag handle to change the crop selection area\",\n        sDragHandle: \"Use the up and down arrow keys to move the south drag handle to change the crop selection area\",\n        swDragHandle: \"Use the arrow keys to move the south west drag handle to change the crop selection area\",\n        wDragHandle: \"Use the up and down arrow keys to move the west drag handle to change the crop selection area\"\n    }\n});\nlet S = x;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-image-crop/dist/index.js\n");

/***/ })

};
;